using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;
using Moq;
using TestGenerator.Tests.Files;

namespace TestGenerator.Tests.Files.Tests
{
    public class DependentClassTests
    {
        private DependentClass _dependentClass;
        private Mock<IDisposable> _disp;
        private Mock<IFormattable> _formattable;
        private int _i = 0;
        
        [SetUp]
        public void SetUp()
        {
            _disp = new Mock<IDisposable>();
            _formattable = new Mock<IFormattable>();
            _dependentClass = new DependentClass(_disp.Object, _formattable.Object, _i);
        }
        
        [Test]
        public void VoidMethodTest()
        {
            string myStr = null;
            Decoder decoder = null;
            
            _dependentClass.VoidMethod(myStr, decoder);
            
            Assert.Fail("autogenerated");
        }
        
        [Test]
        public void IntMethodTest()
        {
            int i = 0;
            
            int actual = _dependentClass.IntMethod(i);
            
            int expected = 0;
            Assert.That(actual, Is.EqualTo(expected));
            Assert.Fail("autogenerated");
        }
        
    }
}
